@page "/todo"
@using Newtonsoft.Json

@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<h3>Todo (@todos.Count(todo => !todo.IsDone))</h3>

<ul>

@for (int i = 0; i < todos.Count; i++)
{
        var index = i;
        var todo = todos[i];
        <li>
            <input type="checkbox" @bind-value="todo.IsDone"@onclick="(() => DeleteDone(index))" />
            <input @bind="todo.Title" />
        </li>
}
</ul>

<input placeholder="Something todo" @bind="newTodo" />
<button @onclick="AddTodo">Add todo</button>


@code {
    public List<TodoItem> todos = new List<TodoItem>();
    private string newTodo;
    private const string TodoLocalStorageKey = "SavedTodos";

    protected override async Task OnInitializedAsync()
    {

        todos = await GetStoredTodos();
    }
    
    private void AddTodo()
    {
        if (!string.IsNullOrWhiteSpace(newTodo))
        {
            todos.Add(new TodoItem { Title = newTodo });
            newTodo = string.Empty;
            SaveTodos();
        }
    }
    private void DeleteDone(int index)
    {
        todos.RemoveAt(index);
        SaveTodos();

    }

    private void SaveTodos()
    {
        LocalStorage.SetItemAsync(TodoLocalStorageKey, JsonConvert.SerializeObject(todos));
    }

    private async Task<List<TodoItem>> GetStoredTodos()
    {
        var storedTodos = await LocalStorage.GetItemAsync<string>(TodoLocalStorageKey);
        return JsonConvert.DeserializeObject<List<TodoItem>>(storedTodos);
    }
}
